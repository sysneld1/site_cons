# Generated by Django 3.0.11 on 2020-12-03 12:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Катергоия')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(db_index=True, max_length=50, verbose_name='Логин')),
                ('password', models.CharField(max_length=15, verbose_name='Пароль')),
                ('family', models.TextField(blank=True, verbose_name='Фамилия')),
                ('name', models.TextField(blank=True, verbose_name='Имя')),
                ('phone', models.IntegerField(verbose_name='Телефон')),
                ('email', models.EmailField(max_length=50, verbose_name='E-mail')),
                ('task_num', models.IntegerField(verbose_name='Номер задачи')),
                ('avatar', models.ImageField(upload_to='avatar/%Y/%m/%d/', verbose_name='Аватар')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['login'],
            },
        ),
        migrations.CreateModel(
            name='Specialists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=20, verbose_name='Логин')),
                ('password', models.CharField(max_length=20, verbose_name='Пароль')),
                ('family', models.TextField(blank=True, verbose_name='Фамилия')),
                ('name', models.TextField(blank=True, verbose_name='Имя')),
                ('phone', models.IntegerField(verbose_name='Телефон')),
                ('email', models.EmailField(max_length=50, verbose_name='E-mail')),
                ('task_num', models.IntegerField(verbose_name='Номер задачи')),
                ('avatar', models.ImageField(upload_to='avatar/%Y/%m/%d/', verbose_name='Аватар')),
                ('payment_invoice', models.CharField(max_length=40, verbose_name='Номер счета')),
                ('self_qualification', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Квалификация')),
                ('self_experience', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Опыт')),
                ('real_qualification', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Реальная Квалификация')),
                ('real_experience', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Реальный Опыт')),
                ('real_quality', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Реальный качество')),
                ('real_speed', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Реальная скорость')),
                ('real_cost', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Адекватность цены')),
            ],
            options={
                'verbose_name': 'Специалист',
                'verbose_name_plural': 'Специалисты',
                'ordering': ['login'],
            },
        ),
        migrations.CreateModel(
            name='Thema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Катергоия')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Темы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summa', models.IntegerField(verbose_name='Сумма')),
                ('id_specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Specialists')),
            ],
            options={
                'verbose_name': 'Кошелек',
                'verbose_name_plural': 'Кошельки',
                'ordering': ['id_specialist'],
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_short', models.CharField(max_length=150, verbose_name='Короткое описание')),
                ('description_full', models.TextField(verbose_name='полное описание')),
                ('files', models.FileField(upload_to='files/%Y/%m/%d/', verbose_name='Файлы')),
                ('photo', models.ImageField(upload_to='photo/%Y/%m/%d/', verbose_name='Фото')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('resolved', models.BooleanField(default=False, verbose_name='Решена')),
                ('payed', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('id_pay', models.CharField(max_length=100, verbose_name='Номер платежа')),
                ('id_theme', models.IntegerField(verbose_name='Тема')),
                ('id_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='global_platform.Category')),
                ('id_client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Clients')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['id_client'],
            },
        ),
        migrations.CreateModel(
            name='Table1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field2', models.CharField(max_length=150, verbose_name='Короткое описание')),
                ('field3', models.TextField(verbose_name='полное описание')),
                ('field4', models.FileField(upload_to='files/%Y/%m/%d/', verbose_name='Файлы')),
                ('field5', models.ImageField(upload_to='photo/%Y/%m/%d/', verbose_name='Фото')),
                ('field6', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('field7', models.BooleanField(default=False, verbose_name='Решена')),
                ('field8', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('field9', models.CharField(max_length=150, verbose_name='Номер платежа')),
                ('field10', models.IntegerField(verbose_name='Тема')),
                ('field1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Clients')),
                ('field11', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Category')),
            ],
            options={
                'verbose_name': 'Таблица1 резерв',
                'verbose_name_plural': 'Таблицы1 резерв',
                'ordering': ['field1'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summa', models.FloatField(verbose_name='Сумма')),
                ('paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('data_paid', models.DateTimeField(auto_now_add=True, verbose_name='Дата платежа')),
                ('payment_account', models.CharField(max_length=30, verbose_name='номер счета')),
                ('id_task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Tasks')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['id_task'],
            },
        ),
        migrations.CreateModel(
            name='Log_telnet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('text', models.TextField(blank=True, verbose_name='Сообщение')),
                ('files', models.FileField(upload_to='log_files/%Y/%m/%d/', verbose_name='файл активности')),
                ('images', models.ImageField(upload_to='log_images/%Y/%m/%d/', verbose_name='Изображение активности')),
                ('id_executor', models.IntegerField(verbose_name='На кого назначена')),
                ('id_client', models.IntegerField(verbose_name='Клиент')),
                ('id_specialist', models.IntegerField(verbose_name='Специалист')),
                ('id_task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Tasks')),
            ],
            options={
                'verbose_name': 'Действие в telnet',
                'verbose_name_plural': 'Действия в telnet',
                'ordering': ['id_task'],
            },
        ),
        migrations.CreateModel(
            name='Log_actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('text', models.TextField(blank=True, verbose_name='Сообщение')),
                ('files', models.FileField(upload_to='log_files/%Y/%m/%d/', verbose_name='файл активности')),
                ('images', models.ImageField(upload_to='log_images/%Y/%m/%d/', verbose_name='Изображение активности')),
                ('id_executor', models.IntegerField(verbose_name='На кого назначена')),
                ('id_client', models.IntegerField(verbose_name='Клиент')),
                ('id_specialist', models.IntegerField(verbose_name='Специалист')),
                ('id_task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Tasks')),
            ],
            options={
                'verbose_name': 'Действие по задаче',
                'verbose_name_plural': 'Действия по задаче',
                'ordering': ['id_task'],
            },
        ),
        migrations.AddField(
            model_name='category',
            name='id_thema',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='global_platform.Thema'),
        ),
    ]
